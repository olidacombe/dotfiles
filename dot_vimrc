autocmd FileType toml setlocal ts=4 sts=4 sw=4 expandtab
autocmd FileType yaml setlocal ts=2 sts=2 sw=2 expandtab
"autocmd FileType htmldjango setlocal ts=2 sts=2 sw=2 expandtab

"automatically apply chezmoi on edit
autocmd BufWritePost ~/.local/share/chezmoi/* ! chezmoi apply --source-path "%"

call plug#begin('~/.vim/plugged')

if has('nvim')
  Plug 'neoclide/coc.nvim', {'branch': 'release'}

  " Collection of common configurations for the Nvim LSP client
  Plug 'neovim/nvim-lspconfig'
  Plug 'williamboman/nvim-lsp-installer'
  
  " Completion framework
  Plug 'hrsh7th/nvim-cmp'
  
  " LSP completion source for nvim-cmp
  Plug 'hrsh7th/cmp-nvim-lsp'
  
  " Snippet completion source for nvim-cmp
  Plug 'hrsh7th/cmp-vsnip'
  
  " Other usefull completion sources
  Plug 'hrsh7th/cmp-path'
  Plug 'hrsh7th/cmp-buffer'
  
  " See hrsh7th's other plugins for more completion sources!
  
  " To enable more of the features of rust-analyzer, such as inlay hints and more!
  Plug 'simrat39/rust-tools.nvim'
  
  " Snippet engine
  Plug 'hrsh7th/vim-vsnip'
  
  " Fuzzy finder
  " Optional
  Plug 'nvim-lua/popup.nvim'
  Plug 'nvim-lua/plenary.nvim'
  "Plug 'nvim-telescope/telescope.nvim'
  
  " Colours
  Plug 'marko-cerovac/material.nvim'

  " Icons
  Plug 'nvim-tree/nvim-web-devicons'

  " Status line
  Plug 'nvim-lualine/lualine.nvim'

  " LUA Utils (required by various other)
  Plug 'nvim-lua/plenary.nvim'

  " Diffview
  Plug 'sindrets/diffview.nvim'
endif
Plug 'airblade/vim-gitgutter'
Plug 'airblade/vim-rooter'
Plug 'cespare/vim-toml'
Plug 'Chiel92/vim-autoformat'
Plug 'codechips/coc-svelte', {'do': 'npm install'}
Plug 'coachshea/vim-textobj-markdown'
"Plug 'dense-analysis/ale'
Plug 'evanleck/vim-svelte'
Plug 'fatih/vim-go', { 'do': ':GoUpdateBinaries' }
Plug 'honza/vim-snippets'
Plug 'HerringtonDarkholme/yats.vim'
Plug 'jeetsukumaran/vim-indentwise'
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
Plug 'jvirtanen/vim-hcl'
Plug 'kana/vim-textobj-user'
Plug 'michaeljsmith/vim-indent-object'
Plug 'mattn/emmet-vim'
Plug 'pangloss/vim-javascript'
Plug 'preservim/nerdcommenter'
"Plug 'rust-lang/rust.vim'
Plug 'saltstack/salt-vim'
Plug 'SirVer/ultisnips'
if !has('nvim')
  Plug 'nsheerun/vim-polyglot'
endif
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-fugitive'
"Plug 'Yggdroot/indentLine'
if !has('nvim')
  Plug 'ycm-core/YouCompleteMe'
endif

" Initialize plugin system
call plug#end()

set modeline
set modelines=5

syntax on
"set nocompatible
"filetype plugin indent on

let g:rustfmt_autosave = 1

" Prettier Settings
let g:prettier#quickfix_enabled = 0
let g:prettier#autoformat_require_pragma = 0
"au BufWritePre *.css,*.svelte,*.pcss,*.html,*.ts,*.js,*.json PrettierAsync

" Global pynvim interpreter so venvs don't always complain
let g:python3_host_prog = '/usr/local/bin/python3'

" Syntax highlighting inside markdown fenced code blocks
let g:markdown_fenced_languages = ['html', 'python', 'ruby', 'rust', 'vim', 'yaml']

set exrc
set secure
